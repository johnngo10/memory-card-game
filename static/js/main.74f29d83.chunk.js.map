{"version":3,"sources":["components/Header.js","components/Board.js","App.js","index.js"],"names":["Header","props","id","className","score","bestScore","Board","useState","clickedArr","setClickedArr","name","img","cards","setCards","handleCardClick","e","target","currentTarget","lastElementChild","textContent","shuffleArr","shuffle","indexOf","concat","handleScore","arr","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","map","value","index","onClick","src","alt","App","setScore","setBestScore","scoreNum","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAoBeA,EApBA,SAAAC,GACb,OACE,mCACE,qBAAIC,GAAG,QAAP,UACE,sBAAKC,UAAU,aAAf,iBACM,sBAAMD,GAAG,MAAT,iBADN,WAGA,qBAAKC,UAAU,aAAf,4BAEF,0GAGA,sBAAKD,GAAG,kBAAR,UACE,wCAAWD,EAAMG,SACjB,6CAAgBH,EAAMI,oBCiGfC,EA7GD,SAAAL,GAAU,IAAD,EACeM,mBAAS,IADxB,mBACdC,EADc,KACFC,EADE,OAEKF,mBAAS,CACjC,CACEG,KAAM,cACNC,IAAK,yBAEP,CACED,KAAM,eACNC,IAAK,0BAEP,CACED,KAAM,cACNC,IAAK,yBAEP,CACED,KAAM,aACNC,IAAK,wBAEP,CACED,KAAM,WACNC,IAAK,wBAEP,CACED,KAAM,cACNC,IAAK,wBAEP,CACED,KAAM,cACNC,IAAK,2BAEP,CACED,KAAM,WACNC,IAAK,6BAEP,CACED,KAAM,gBACNC,IAAK,kBAEP,CACED,KAAM,WACNC,IAAK,kCAEP,CACED,KAAM,oBACNC,IAAK,mCAEP,CACED,KAAM,mBACNC,IAAK,+BAjDY,mBAEdC,EAFc,KAEPC,EAFO,KAiEfC,EAAkB,SAAAC,GACtB,IAAMC,EAASD,EAAEE,cAAcC,iBAAiBC,YAC1CC,EAAaC,EAAQT,GAC3BC,EAASO,GAELZ,EAAWc,QAAQN,GAAU,GAC/BP,EAAcD,EAAWe,OAAOP,IAChCf,EAAMuB,YAAYvB,EAAMG,MAAQ,KAEhCK,EAAc,IACdR,EAAMuB,YAAY,KAKhBH,EAAU,SAAAI,GAId,IAHA,IACEC,EACAC,EAFEC,EAAeH,EAAII,OAGhB,IAAMD,GACXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAGzCF,EAAiBD,EAFjBG,GAAgB,GAGhBH,EAAIG,GAAgBH,EAAIE,GACxBF,EAAIE,GAAeD,EAErB,OAAOD,GAGT,OACE,+BACGb,EAAMqB,KAAI,SAACC,EAAOC,GACjB,OACE,sBAAKhC,UAAU,QAAoBiC,QAAStB,EAA5C,UACE,qBAAKuB,IAAKH,EAAMvB,IAAK2B,IAAKJ,EAAMxB,OAChC,4BAAIwB,EAAMxB,SAFgByB,SC9EvBI,EAnBH,WAAO,IAAD,EACUhC,mBAAS,GADnB,mBACTH,EADS,KACFoC,EADE,OAEkBjC,mBAAS,GAF3B,mBAETF,EAFS,KAEEoC,EAFF,KAWhB,OACE,sBAAKtC,UAAU,MAAf,UACE,cAAC,EAAD,CAAQC,MAAOA,EAAOC,UAAWA,IACjC,cAAC,EAAD,CAAOmB,YAVS,SAAAkB,GAClBF,EAASE,GACLtC,EAAQC,GAA0B,IAAbqC,GACvBD,EAAarC,IAOoBA,MAAOA,QCd9CuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.74f29d83.chunk.js","sourcesContent":["const Header = props => {\n  return (\n    <header>\n      <h1 id='title'>\n        <div className='title-text'>\n          Rick<span id='And'>And</span>Morty\n        </div>\n        <div className='title-text'>Memory Game</div>\n      </h1>\n      <h3>\n        Test your memory! Earn points by clicking on an image no more than once.\n      </h3>\n      <div id='score-container'>\n        <p>Score: {props.score}</p>\n        <p>Best Score: {props.bestScore}</p>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\n\nconst Board = props => {\n  const [clickedArr, setClickedArr] = useState([]);\n  const [cards, setCards] = useState([\n    {\n      name: 'Morty Smith',\n      img: './Img/Morty_Smith.jpg',\n    },\n    {\n      name: 'Rick Sanchez',\n      img: './Img/Rick_Sanchez.png',\n    },\n    {\n      name: 'Jerry Smith',\n      img: './Img/Jerry_Smith.png',\n    },\n    {\n      name: 'Beth Smith',\n      img: './Img/Beth_Smith.png',\n    },\n    {\n      name: 'Meeseeks',\n      img: './Img/MeeseeksHQ.png',\n    },\n    {\n      name: 'Bird Person',\n      img: './Img/Birdperson.jpg',\n    },\n    {\n      name: 'Pickle Rick',\n      img: './Img/Ratpicklerick.png',\n    },\n    {\n      name: 'Snuffles',\n      img: './Img/Snuffles-helmet.jpg',\n    },\n    {\n      name: 'Zeep Xanflorp',\n      img: './Img/Zeep.png',\n    },\n    {\n      name: 'Morty Jr',\n      img: './Img/Morty_Jr_Sitting.JPG.jpg',\n    },\n    {\n      name: 'Mr. Poopybutthole',\n      img: './Img/S2e4_mr_poopybutthole.png',\n    },\n    {\n      name: 'King Flippy Nips',\n      img: './Img/King_Flippynips.png',\n    },\n  ]);\n\n  // useEffect(() => {\n  //   const handleClick = () => {\n  //     console.log('hello');\n  //   };\n  //   const cards = document.getElementById('cards');\n  //   cards.addEventListener('click', handleClick);\n\n  //   return () => {\n  //     cards.removeEventListener('click', handleClick);\n  //   };\n  // }, []);\n\n  const handleCardClick = e => {\n    const target = e.currentTarget.lastElementChild.textContent;\n    const shuffleArr = shuffle(cards);\n    setCards(shuffleArr);\n\n    if (clickedArr.indexOf(target) < 0) {\n      setClickedArr(clickedArr.concat(target));\n      props.handleScore(props.score + 1);\n    } else {\n      setClickedArr([]);\n      props.handleScore(0);\n    }\n  };\n\n  // Using the Fisher-Yates shuffle to randomize items in array\n  const shuffle = arr => {\n    let currentIndex = arr.length,\n      temporaryValue,\n      randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temporaryValue = arr[currentIndex];\n      arr[currentIndex] = arr[randomIndex];\n      arr[randomIndex] = temporaryValue;\n    }\n    return arr;\n  };\n\n  return (\n    <main>\n      {cards.map((value, index) => {\n        return (\n          <div className='cards' key={index} onClick={handleCardClick}>\n            <img src={value.img} alt={value.name} />\n            <p>{value.name}</p>\n          </div>\n        );\n      })}\n    </main>\n  );\n};\n\nexport default Board;\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Board from './components/Board';\n\nconst App = () => {\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  const handleScore = scoreNum => {\n    setScore(scoreNum);\n    if (score > bestScore && scoreNum === 0) {\n      setBestScore(score);\n    }\n  };\n\n  return (\n    <div className='App'>\n      <Header score={score} bestScore={bestScore} />\n      <Board handleScore={handleScore} score={score} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}